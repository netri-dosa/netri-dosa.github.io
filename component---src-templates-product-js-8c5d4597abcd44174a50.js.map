{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Badge.js","webpack:///./src/templates/product.js"],"names":["Badge","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","prefix","createElement","displayName","defaultProps","Product","product","data","allProductsYaml","nodes","Container","Row","Col","name","type","md","Image","src","image","publicURL","sku"],"mappings":"oOAQIA,EAAQ,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACfC,EAAOJ,EAAKI,KACZC,EAAYL,EAAKK,UACjBC,EAAUN,EAAKO,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1CG,EAAQ,YAA8BT,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFU,EAAS,YAAmBR,EAAU,SAC1C,OAAoB,IAAMS,cAAcH,EAAW,YAAS,CAC1DP,IAAKA,GACJQ,EAAO,CACRJ,UAAW,IAAWA,EAAWK,EAAQN,GAAQM,EAAS,QAASP,GAAWO,EAAS,IAAMP,SAGjGL,EAAMc,YAAc,QACpBd,EAAMe,aApBa,CACjBT,MAAM,GAoBO,Q,YCgCAU,UApDC,SAAC,GAAc,IACrBC,EADoB,EAAXC,KACMC,gBAAgBC,MAAM,GAAGH,QAC9C,OACI,kBAAC,IAAD,KACI,yBAAKV,UAAU,mBACX,kBAACc,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKf,UAAU,eACX,kBAACgB,EAAA,EAAD,CAAKhB,UAAU,kBACX,yBAAKA,UAAU,SAASU,EAAQO,MAChC,yBAAKjB,UAAU,YAAf,KAA6BU,EAAQQ,KAArC,eAGR,kBAACH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKG,GAAI,EAAGnB,UAAU,UAClB,yBAAKA,UAAU,iBACX,kBAACoB,EAAA,EAAD,CAAOC,IAAKX,EAAQY,MAAMC,cAGlC,kBAACP,EAAA,EAAD,CAAKG,GAAI,EAAGnB,UAAU,UAClB,yBAAKA,UAAU,gBAAf,SAAqCU,EAAQO,MAC7C,yBAAKjB,UAAU,eAAf,QAAmCU,EAAQc,KAC3C,kBAAC,EAAD,CAAOxB,UAAU,oBAAoBU,EAAQQ","file":"component---src-templates-product-js-8c5d4597abcd44174a50.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from 'react'\nimport { Row, Col, Container, Badge, Image } from 'react-bootstrap'\n\nimport Layout from '../components/layout'\nimport { graphql } from 'gatsby'\n\nconst Product = ({ data }) => {\n    const product = data.allProductsYaml.nodes[0].product;\n    return (\n        <Layout>\n            <div className=\"product-details\">\n                <Container>\n                    <Row className=\"text-center\">\n                        <Col className=\"product-header\">\n                            <div className=\"title\">{product.name}</div>\n                            <div className=\"tag-line\">A {product.type} product!</div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={6} className=\"m-auto\">\n                            <div className=\"product-image\">\n                                <Image src={product.image.publicURL}/>\n                            </div>\n                        </Col>\n                        <Col md={6} className=\"m-auto\">\n                            <div className=\"product-name\">Name: {product.name}</div>\n                            <div className=\"product-sku\">Sku: {product.sku}</div>\n                            <Badge className=\"product-category\">{product.type}</Badge>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </Layout>\n    );\n}\n\nexport const productQuery = graphql`\n  query($sku: String!) {\n    allProductsYaml(filter: { product: { sku: { eq: $sku } } }) {\n      nodes {\n        product {\n            description\n            name\n            path\n            short_order\n            short_description\n            sku\n            sort_order\n            type\n            image {\n                publicURL\n            }\n        }\n      }\n    }\n  }\n`;\n\nexport default Product"],"sourceRoot":""}