{"version":3,"sources":["webpack:///./src/templates/category.js"],"names":["RelatedCategories","items","class","id","className","title","map","item","index","to","link","fieldValue","CategoryPage","data","products","allProductsYaml","nodes","otherCategories","other","product","category","length"],"mappings":"4FAAA,wGAOMA,EAAoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACI,6BAASC,MAAM,UAAUC,GAAG,WACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKD,MAAM,eAAc,kBAAC,IAAD,CAAKE,UAAU,sBAAf,qBACzB,kBAAC,IAAD,CAAKF,MAAM,eAEHD,EAAMI,MAAMC,KAAI,SAACC,EAAMC,GACnB,OACI,kBAAC,IAAD,CAAKJ,UAAU,eACX,yBAAKF,MAAM,uBACP,kBAAC,IAAD,CAAMO,GAAE,IAAMR,EAAMS,KAAKF,GAAOG,WAAcN,MAAOE,EAAKI,YACtD,yBAAKP,UAAU,gBAAgBG,EAAKI,sBAwEjEC,UA3DM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdC,EAAWD,EAAKE,gBAAgBC,MAChCC,EAAkBJ,EAAKK,MAC7B,OACI,kBAAC,IAAD,KACI,6BAAShB,MAAM,UAAUC,GAAG,YACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKD,MAAM,eACP,yBAAKA,MAAM,sCACP,yBAAKA,MAAM,UACP,8BAAOY,EAAS,GAAGK,QAAQC,aAIvC,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAKlB,MAAM,aACP,kBAAC,IAAD,CAAeY,SAAUA,SAM5CG,EAAgBZ,MAAMgB,OAAS,GAAK,kBAACrB,EAAD,CAAmBC,MAAOgB","file":"component---src-templates-category-js-1d11c7c3dde54b8fee9a.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { Row, Col, Container } from 'react-bootstrap';\n\nimport Layout from '../components/layout';\nimport ProductSlider from \"../templates/product-slider\";\n\nconst RelatedCategories = ({ items }) => {\n    return (\n        <section class=\"section\" id=\"related\">\n            <Container>\n                <Row class=\"text-center\"><Col className=\"text-center header\">Also have a look</Col></Row>\n                <Row class=\"text-center\">\n                    {\n                        items.title.map((item, index) => {\n                            return (\n                                <Col className=\"text-center\">\n                                    <div class=\"gb-card text-center\">\n                                        <Link to={`/${items.link[index].fieldValue}`} title={item.fieldValue}>\n                                            <div className=\"product-name\">{item.fieldValue}</div>\n                                        </Link>\n                                    </div>\n                                </Col>\n                            );\n                        })\n                    }\n                </Row>\n            </Container>\n        </section>\n    )\n}\n\nconst CategoryPage = ({ data }) => {\n    const products = data.allProductsYaml.nodes;\n    const otherCategories = data.other;\n    return (\n        <Layout>\n            <section class=\"section\" id=\"category\">\n                <Container>\n                    <Row class=\"text-center\">\n                        <div class=\"col-lg-6 col-md-12 col-sm-12 title\">\n                            <div class=\"header\">\n                                <span>{products[0].product.category}</span>\n                            </div>\n                        </div>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <div class=\"gb-slider\">\n                                <ProductSlider products={products} />\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n            {otherCategories.title.length > 0 && <RelatedCategories items={otherCategories} />}\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n  query($category: String!){\n    allProductsYaml(filter: {product: {category: {eq: $category}}}, sort: {fields: product___sort_order}) {\n      nodes {\n        product {\n          image {\n            publicURL\n          }\n          name\n          path\n          short_description\n          sku\n          sort_order\n          type\n          description\n          category\n        }\n      }\n    }\n    other: allProductsYaml(filter: {product: {category: {ne: $category}}}) {\n        title: group(field: product___category) {\n            fieldValue\n        }\n        link: group(field: product___type) {\n            fieldValue\n        }\n    }\n  }\n`\n\n\nexport default CategoryPage;"],"sourceRoot":""}